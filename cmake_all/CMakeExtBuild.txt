macro( DEFINE_DEFAULT variable default )
if( NOT DEFINED ${variable} )
   set( ${variable} $ENV{${variable}} )
   if( "${${variable}}" STREQUAL "" )
     set( ${variable} ${default} )
   endif( "${${variable}}" STREQUAL "" )
endif( NOT DEFINED ${variable} )
endmacro( DEFINE_DEFAULT variable )

  if( CMAKE_TOOLCHAIN_FILE )
    set( TOOLCHAIN -DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE} )
  endif( CMAKE_TOOLCHAIN_FILE )

include( ExternalProject )

macro( BuildProject PROJECT SOLUTION PROJECT_SOURCE INSTALL_RESULT )


string( REPLACE ";" " " PLATFORM_LIBRARIES_ARG "${PLATFORM_LIBRARIES}" )
string( REPLACE ";" " " PLATFORM_DEFINES_ARG "${PLATFORM_DEFINES}" )
string( REPLACE ";" "," PLATFORM_CMAKE_DEFINES_ARG "${PLATFORM_CMAKE_DEFINES}" )

set( LAST_TARGET ${PROJECT} )

message( "ADD PROJECT:${PROJECT}  ${PROJECT_SOURCE}" )

ExternalProject_Add( ${PROJECT} 
	SOURCE_DIR ${PROJECT_SOURCE}
	BINARY_DIR ${CMAKE_BINARY_DIR}/${PROJECT}
	INSTALL_DIR ${CMAKE_INSTALL_PREFIX}/${project}
        ${EXTERNAL_BUILD_EXTRA_FLAGS}
	CMAKE_ARGS -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>/${PROJECT}
		-DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE} 
		-DCMAKE_BINARY_DIR:PATH=${CMAKE_BINARY_DIR} 
		-DSACK_BASE=${SACK_BASE}
		-DSACK_SDK_ROOT_PATH=<INSTALL_DIR>/core
		-DSACK_BINARY_SDK_ROOT_PATH=<INSTALL_DIR>/binary
		-DINTERSHELL_SDK_ROOT_PATH=<INSTALL_DIR>/intershell
		-DDEKWARE_SDK_ROOT_PATH=<INSTALL_DIR>/dekware
		-DPLATFORM_LIBRARIES=${PLATFORM_LIBRARIES_ARG}
		-DPLATFORM_DEFINES=${PLATFORM_DEFINES_ARG}
		-DPLATFORM_CMAKE_DEFINES=${PLATFORM_CMAKE_DEFINES_ARG}
)
	


endmacro( BuildProject )


