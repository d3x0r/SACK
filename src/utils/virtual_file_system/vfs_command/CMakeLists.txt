
set( PROJECT sack_vfs_command )

set(BASE_SOURCES
    vfs_command.c
)

sack_add_executable( ${PROJECT} ${BASE_SOURCES} )

SET_TARGET_PROPERTIES(${PROJECT} PROPERTIES
                  FOLDER utils/vfs
)
SET_PROPERTY(TARGET ${PROJECT} APPEND PROPERTY COMPILE_DEFINITIONS "VFS_DISK_DATATYPE=uint32_t" )

target_link_libraries( ${PROJECT} sack_vfs ${SACK_CORE_LIBRARY} )
install_mode_dest( ${PROJECT} )


sack_add_executable( ${PROJECT}.64 ${BASE_SOURCES} )
SET_TARGET_PROPERTIES(${PROJECT}.64 PROPERTIES FOLDER utils/vfs )
target_link_libraries( ${PROJECT}.64 sack_vfs ${SACK_CORE_LIBRARY} )
install_mode_dest( ${PROJECT}.64 )
SET_PROPERTY(TARGET ${PROJECT}.64 APPEND PROPERTY COMPILE_DEFINITIONS "VFS_DISK_DATATYPE=uint64_t" )


string( REPLACE ";" " " K12_SOURCES_ARG "${K12_SOURCES}" )
string( REPLACE ";" " " K12_INCLUDE_ARG "${K12_INCLUDES}" )
string( REPLACE ";" " " PLATFORM_LIBRARIES_ARG "${HOST_PLATFORM_LIBRARIES}" )
string( REPLACE ";" " " PLATFORM_DEFINES_ARG "${HOST_PLATFORM_DEFINES}" )
string( REPLACE ";" "," PLATFORM_CMAKE_DEFINES_ARG "${HOST_PLATFORM_CMAKE_DEFINES}" )

ExternalProject_Add( ${PROJECT}_portable
	BUILD_ALWAYS ON
	SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/portable
	BINARY_DIR x
	INSTALL_DIR ${CMAKE_INSTALL_PREFIX}
        ${EXTERNAL_BUILD_EXTRA_FLAGS}
	CMAKE_ARGS -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>
		-DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}
		-DSACK_BASE=${SACK_BASE}
		-DPLATFORM_LIBRARIES=${PLATFORM_LIBRARIES_ARG}
		-DPLATFORM_DEFINES=${PLATFORM_DEFINES_ARG}
		-DPLATFORM_CMAKE_DEFINES=${PLATFORM_CMAKE_DEFINES_ARG}
		-DSHA1_SOURCES=${SHA1_SOURCES}
		-DSHA2_SOURCES=${SHA2_SOURCES}
		-DSHA3_SOURCES=${SHA3_SOURCES}
		-DK12_SOURCES=${K12_SOURCES_ARG}
		-DK12_INCLUDES=${K12_INCLUDE_ARG}
)

#add_subdirectory( portable )
