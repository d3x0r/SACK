	set( BASE_PATH ${CMAKE_INSTALL_PREFIX} )
	set( FILEOUT ${BASE_PATH}/CMakePackage )

#message( "Output to ${FILEOUT}" )



if( NOT BUILD_INTO_SACK_INSTALL )
		FILE( WRITE ${FILEOUT} "GET_FILENAME_COMPONENT(SACK_SDK_ROOT_PATH \"[HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Freedom Collective\\\\SACK;Install_Dir]\" ABSOLUTE CACHE)\n" )
		FILE( APPEND ${FILEOUT} "include( $" "{SACK_SDK_ROOT_PATH}/CMakePackage)\n" )
else( NOT BUILD_INTO_SACK_INSTALL )
		FILE( APPEND ${FILEOUT} "GET_FILENAME_COMPONENT(SACK_SDK_ROOT_PATH \"[HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Freedom Collective\\\\SACK;Install_Dir]\" ABSOLUTE CACHE)\n" )
endif( NOT BUILD_INTO_SACK_INSTALL )


		#//FILE( APPEND ${FILEOUT} "GET_FILENAME_COMPONENT(INTERSHELL_SDK_ROOT_PATH \"[HKEY_LOCAL_MACHINE\\SOFTWARE\\Freedom Collective\\@CMAKE_PROJECT_NAME@;Install_Dir]\" ABSOLUTE CACHE)\n" )

		FILE( APPEND ${FILEOUT} "set( INTERSHELL_BASE ${BASE_PATH} )\n" )
		FILE( APPEND ${FILEOUT} "set( INTERSHELL_INCLUDE_DIR $" "{INTERSHELL_BASE}/include/SACK )\n" )
		FILE( APPEND ${FILEOUT} "set( INTERSHELL_LIBRARIES sack_widgets )\n" )
		FILE( APPEND ${FILEOUT} "set( INTERSHELL_LIBRARY_DIR $" "{INTERSHELL_BASE}/${SHARED_LIBRARY_LINK_DIR} )\n" )

		FILE( APPEND ${FILEOUT} "\n" )
		FILE( APPEND ${FILEOUT} "set(  INTERSHELL_REPO_REVISION \"@CURRENT_REPO_REVISION@\" )\n" )
		FILE( APPEND ${FILEOUT} "set(  INTERSHELL_BUILD_TYPE \"@CMAKE_BUILD_TYPE@\" )\n" )
		FILE( APPEND ${FILEOUT} "set(  INTERSHELL_GENERATOR \"@CMAKE_GENERATOR@\" )\n" )
		FILE( APPEND ${FILEOUT} "set(  INTERSHELL_PROJECT_NAME \"@CMAKE_PROJECT_NAME@\" )\n" )

		FILE( APPEND ${FILEOUT} "\n" )
		FILE( APPEND ${FILEOUT} "macro( INSTALL_INTERSHELL_BINARY_OLD dest )\n" )
		FILE( APPEND ${FILEOUT} "install( DIRECTORY $" "{INTERSHELL_BASE}/bin/ DESTINATION $" "{dest} )\n" )
		FILE( APPEND ${FILEOUT} "endmacro( INSTALL_INTERSHELL_BINARY_OLD )\n" )
		FILE( APPEND ${FILEOUT} "\n" )
		FILE( APPEND ${FILEOUT} "macro( INSTALL_INTERSHELL_CORE dest)\n" )
if( __ANDROID__ )
		FILE( APPEND ${FILEOUT} "install( FILES  $" "{REAL_INSTALL_TARGETS} $" "{INTERSHELL_BASE}/${CMAKE_INSTALL_LIBDIR}/@CMAKE_SHARED_LIBRARY_PREFIX@InterShell.core@CMAKE_SHARED_LIBRARY_SUFFIX@ $" "{INTERSHELL_BASE}/${CMAKE_INSTALL_LIBDIR}/@CMAKE_SHARED_LIBRARY_PREFIX@sack_widgets@CMAKE_SHARED_LIBRARY_SUFFIX@ DESTINATION $" "{dest} )\n" )
elseif( __LINUX__ )
		FILE( APPEND ${FILEOUT} "install( FILES  $" "{REAL_INSTALL_TARGETS} $" "{INTERSHELL_BASE}/bin/InterShell.core $" "{INTERSHELL_BASE}/${CMAKE_INSTALL_LIBDIR}/@CMAKE_SHARED_LIBRARY_PREFIX@sack_widgets@CMAKE_SHARED_LIBRARY_SUFFIX@ DESTINATION $" "{dest} )\n" )
else( __ANDROID__ )
		FILE( APPEND ${FILEOUT} "install( FILES  $" "{REAL_INSTALL_TARGETS} $" "{INTERSHELL_BASE}/bin/InterShell.core $" "{INTERSHELL_BASE}/bin/@CMAKE_SHARED_LIBRARY_PREFIX@sack_widgets@CMAKE_SHARED_LIBRARY_SUFFIX@ DESTINATION $" "{dest} )\n" )
endif( __ANDROID__ )
		FILE( APPEND ${FILEOUT} "endmacro( INSTALL_INTERSHELL_CORE )\n" )
		FILE( APPEND ${FILEOUT} "\n" )

		FILE( APPEND ${FILEOUT} "macro( INSTALL_INTERSHELL_BINARY dest )\n" )
		FILE( APPEND ${FILEOUT} "set( REAL_INSTALL_TARGETS )\n" )
		FILE( APPEND ${FILEOUT} "foreach( TARGET @INSTALLED_TARGETS@ )\n" )
		FILE( APPEND ${FILEOUT} "  set( REAL_INSTALL_TARGETS $" "{REAL_INSTALL_TARGETS} $" "{INTERSHELL_BASE}/bin/$" "{TARGET} )\n" )
		FILE( APPEND ${FILEOUT} "endforeach( TARGET $" "{INSTALLED_TARGETS} )\n" )
		FILE( APPEND ${FILEOUT} "INSTALL_INTERSHELL_CORE( $" "{dest})\n" )
		FILE( APPEND ${FILEOUT} "endmacro( INSTALL_INTERSHELL_BINARY )\n" )

		FILE( APPEND ${FILEOUT} "macro( INSTALL_INTERSHELL_PLUGINS dest )\n" )
if( NOT __ANDROID__ AND NOT __LINUX__ )
		FILE( APPEND ${FILEOUT} "install( DIRECTORY $" "{INTERSHELL_BASE}/bin/plugins/ DESTINATION $" "{dest} )\n" )
		FILE( APPEND ${FILEOUT} "install( FILES $" "{INTERSHELL_BASE}/bin/plugins/@CMAKE_SHARED_LIBRARY_PREFIX@vlc_interface@CMAKE_SHARED_LIBRARY_SUFFIX@ DESTINATION $" "{dest} )\n" )
endif( NOT __ANDROID__ AND NOT __LINUX__ )
		FILE( APPEND ${FILEOUT} "endmacro( INSTALL_INTERSHELL_PLUGINS )\n" )
		FILE( APPEND ${FILEOUT} "\n" )
		FILE( APPEND ${FILEOUT} "macro( INSTALL_INTERSHELL_WIDGETS dest )\n" )
if( __ANDROID__ )
		FILE( APPEND ${FILEOUT} "install( FILES \"$" "{INTERSHELL_BASE}/${CMAKE_INSTALL_LIBDIR}/@CMAKE_SHARED_LIBRARY_PREFIX@sack_widgets@CMAKE_SHARED_LIBRARY_SUFFIX@\" DESTINATION $" "{dest} )\n" )
elseif( __LINUX__ )
		FILE( APPEND ${FILEOUT} "install( FILES \"$" "{INTERSHELL_BASE}/${CMAKE_INSTALL_LIBDIR}/@CMAKE_SHARED_LIBRARY_PREFIX@sack_widgets@CMAKE_SHARED_LIBRARY_SUFFIX@\" DESTINATION $" "{dest} )\n" )
		FILE( APPEND ${FILEOUT} "install( FILES \"$" "{INTERSHELL_BASE}/${CMAKE_INSTALL_BINDIR}/@CMAKE_SHARED_LIBRARY_PREFIX@sack_widgets@CMAKE_SHARED_LIBRARY_SUFFIX@\" DESTINATION $" "{dest} )\n" )
endif( __ANDROID__ )
		FILE( APPEND ${FILEOUT} "endmacro( INSTALL_INTERSHELL_WIDGETS )\n" )
		FILE( APPEND ${FILEOUT} "\n" )
		FILE( APPEND ${FILEOUT} "macro( INSTALL_INTERSHELL_FRAMES dest )\n" )
		FILE( APPEND ${FILEOUT} "install( DIRECTORY $" "{INTERSHELL_BASE}/resources/frames DESTINATION $" "{dest} )\n" )
		FILE( APPEND ${FILEOUT} "endmacro( INSTALL_INTERSHELL_FRAMES )\n" )
		FILE( APPEND ${FILEOUT} "\n" )
		FILE( APPEND ${FILEOUT} "macro( INSTALL_INTERSHELL_IMAGES dest )\n" )
		FILE( APPEND ${FILEOUT} "INSTALL( DIRECTORY $" "{INTERSHELL_BASE}/resources/images DESTINATION $" "{dest} )\n" )
		FILE( APPEND ${FILEOUT} "ENDMACRO( INSTALL_INTERSHELL_IMAGES )\n" )
		FILE( APPEND ${FILEOUT} "\n" )

		FILE( APPEND ${FILEOUT} "macro( INSTALL_INTERSHELL_FONTS dest )\n" )
		FILE( APPEND ${FILEOUT} "  install( DIRECTORY $" "{INTERSHELL_BASE}/resources/fonts/ DESTINATION $" "{dest} )\n" )
		FILE( APPEND ${FILEOUT} "ENDMACRO( INSTALL_INTERSHELL_FONTS )\n" )
		FILE( APPEND ${FILEOUT} "\n" )

		FILE( APPEND ${FILEOUT} "macro( INSTALL_INTERSHELL dest )\n" )
if( NOT __LINUX__ AND NOT __ANDROID__ )
		FILE( APPEND ${FILEOUT} "  if( COMMAND INSTALL_SACK_BINARY )\n" )
		FILE( APPEND ${FILEOUT} "    INSTALL_SACK_BINARY( crossfade bin )\n" )
		FILE( APPEND ${FILEOUT} "  endif( COMMAND INSTALL_SACK_BINARY )\n" )
endif( NOT __LINUX__ AND NOT __ANDROID__ )

		FILE( APPEND ${FILEOUT} "  INSTALL_INTERSHELL_BINARY( $" "{dest}/${CMAKE_INSTALL_BINDIR} )\n" )
		FILE( APPEND ${FILEOUT} "  INSTALL_INTERSHELL_PLUGINS( $" "{dest}/${CMAKE_INSTALL_BINDIR}/plugins )\n" )
		FILE( APPEND ${FILEOUT} "  INSTALL_INTERSHELL_FRAMES( $" "{dest}/resources )\n" )
		FILE( APPEND ${FILEOUT} "  INSTALL_INTERSHELL_IMAGES( $" "{dest}/resources )\n" )
		FILE( APPEND ${FILEOUT} "  INSTALL_INTERSHELL_FONTS( $" "{dest}/resources/fonts )\n" )
		FILE( APPEND ${FILEOUT} "ENDMACRO( INSTALL_INTERSHELL )\n" )
		FILE( APPEND ${FILEOUT} "\n" )
		#//FILE( APPEND ${FILEOUT} "IF(CMAKE_BUILD_TPYE_INITIALIZED_TO_DEFAULT)\n" )

		FILE( APPEND ${FILEOUT} "set(CMAKE_BUILD_TYPE \"@CMAKE_BUILD_TYPE@\" CACHE STRING \"Set build type\")\n" )
		FILE( APPEND ${FILEOUT} "set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS $" "{CMAKE_CONFIGURATION_TYPES} )\n" )

		#//FILE( APPEND ${FILEOUT} "ENDIF(CMAKE_BUILD_TPYE_INITIALIZED_TO_DEFAULT)\n" )

		FILE( APPEND ${FILEOUT} "\n" )

